(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,n)=>{const a=n(377),{lightningChart:s,Themes:i,emptyFill:o,PalettedFill:r,LUT:l,AxisTickStrategies:c,AxisScrollStrategies:d,emptyLine:u,regularColorSteps:p}=a,m=document.getElementById("chart")||document.body;m===document.body&&(m.style.width="100vw",m.style.height="100vh",m.style.margin="0px");const g=s({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}),y=g.UIPanel({container:m,theme:i[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0});y.addUIElement().setPadding(12).setText("Click anywhere to start playing audio").setPointerEvents(!1),y.background.addEventListener("click",(()=>w()));const h=y.getTheme(),w=()=>{y.dispose();const e=document.createElement("div"),t=document.createElement("div");m.append(e),m.append(t),e.style.width="100%",e.style.height="50%",t.style.width="100%",t.style.height="50%";let n=new Audio;n.crossOrigin="anonymous",n.src=new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/0039/alex-productions-noise.mp3";const a=new(window.AudioContext||window.webkitAudioContext);let s=null,i=null;s=a.createMediaElementSource(n),i=a.createAnalyser(),s.connect(i),i.connect(a.destination),i.fftSize=128,n.play();const u=i.frequencyBinCount,w=g.ChartXY({container:e}).setTitle("Alex-Productions - Noise").setTitlePosition("series-right-top").setPadding(30).setUserInteractions(void 0),S=new r({lookUpProperty:"y",lut:new l({interpolate:!0,steps:p(0,200,h.examples.spectrogramColorPalette)})}),A=w.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setCurvePreprocessing({type:"spline",resolution:10}).setPointFillStyle(o).setAreaFillStyle(S).setCursorEnabled(!1);w.getDefaultAxisY().setInterval({start:0,end:256}),w.forEachAxis((e=>e.setTickStrategy(c.Empty)));const x=g.ChartXY({container:t}).setTitle("").setPadding(30),f=x.addPointLineAreaSeries({dataPattern:"ProgressiveX",allowInputModification:!1}).setMaxSampleCount(1e5).setPointFillStyle(o).setAreaFillStyle(o).setCursorEnabled(!1);x.getDefaultAxisX().setScrollStrategy(d.progressive).setTickStrategy(c.Time).setDefaultInterval((e=>({start:(e.dataMax??0)-5e3,end:e.dataMax,stopAxisAfter:!1}))).fit(!1),x.getDefaultAxisY().setAnimationScroll(!1),x.getDefaultAxisY().setTickStrategy(c.Empty),x.getDefaultAxisX().setTickStrategy(c.Time);const P=new Uint8Array(u),T=new Float32Array(i.fftSize);let U;const k=performance.now();let C=0;const v=w.getTitle(),b=()=>{const e=performance.now();if(U){i.getByteFrequencyData(P),i.getFloatTimeDomainData(T),A.clear().appendSamples({yValues:P});const t=new Array(T.length).fill(0).map(((t,n,a)=>U+(e-U)*(n+1)/a.length));f.appendSamples({xValues:t,yValues:T}),x.getDefaultAxisX().setStopped(!1);const n=1e3/((e-k)/C);w.setTitle(`${v} - ${n.toFixed(0)} FPS`)}requestAnimationFrame(b),U=e,C+=1};b()}}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);