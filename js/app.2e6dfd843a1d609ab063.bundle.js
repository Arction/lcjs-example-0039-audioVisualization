(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,n)=>{const a=n(89),{lightningChart:s,Themes:i,emptyFill:o,PalettedFill:l,LUT:r,AxisTickStrategies:c,AxisScrollStrategies:d,emptyLine:u,regularColorSteps:p}=a,m=document.getElementById("chart")||document.body;m===document.body&&(m.style.width="100vw",m.style.height="100vh",m.style.margin="0px");const g=s({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}),y=g.UIPanel({container:m,theme:i[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0});y.addUIElement().setPadding(12).setText("Click anywhere to start playing audio").setMouseInteractions(!1),y.onBackgroundMouseClick((e=>w()));const h=y.getTheme(),w=()=>{y.dispose();const e=document.createElement("div"),t=document.createElement("div");m.append(e),m.append(t),e.style.width="100%",e.style.height="50%",t.style.width="100%",t.style.height="50%";let n=new Audio;n.src=new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/0039/alex-productions-noise.mp3";const a=new(window.AudioContext||window.webkitAudioContext);let s=null,i=null;s=a.createMediaElementSource(n),i=a.createAnalyser(),s.connect(i),i.connect(a.destination),i.fftSize=128,n.play();const u=i.frequencyBinCount,w=g.ChartXY({container:e}).setTitle("Alex-Productions - Noise").setTitlePosition("series-right-top").setPadding(30).setMouseInteractions(!1),S=new l({lookUpProperty:"y",lut:new r({interpolate:!0,steps:p(0,200,h.examples.spectrogramColorPalette)})}),A=w.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setCurvePreprocessing({type:"spline",resolution:10}).setPointFillStyle(o).setAreaFillStyle(S).setCursorEnabled(!1);w.getDefaultAxisY().setInterval({start:0,end:256}),w.forEachAxis((e=>e.setTickStrategy(c.Empty).setMouseInteractions(!1)));const x=g.ChartXY({container:t}).setTitle("").setPadding(30),f=x.addPointLineAreaSeries({dataPattern:"ProgressiveX",allowInputModification:!1}).setMaxSampleCount(1e5).setPointFillStyle(o).setAreaFillStyle(o).setCursorEnabled(!1);x.getDefaultAxisX().setScrollStrategy(d.progressive).setTickStrategy(c.Time).setDefaultInterval((e=>({start:(e.dataMax??0)-5e3,end:e.dataMax,stopAxisAfter:!1}))).fit(!1),x.getDefaultAxisY().setAnimationScroll(!1).setChartInteractionZoomByWheel(!1),x.getDefaultAxisY().setTickStrategy(c.Empty),x.getDefaultAxisX().setTickStrategy(c.Time);const P=new Uint8Array(u),C=new Float32Array(i.fftSize);let T;const k=performance.now();let U=0;const I=w.getTitle(),F=()=>{const e=performance.now();if(T){i.getByteFrequencyData(P),i.getFloatTimeDomainData(C),A.clear().appendSamples({yValues:P});const t=new Array(C.length).fill(0).map(((t,n,a)=>T+(e-T)*(n+1)/a.length));f.appendSamples({xValues:t,yValues:C}),x.getDefaultAxisX().setStopped(!1);const n=1e3/((e-k)/U);w.setTitle(`${I} - ${n.toFixed(0)} FPS`)}requestAnimationFrame(F),T=e,U+=1};F()}}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);